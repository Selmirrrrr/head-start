@using HeadStart.Client.Components
@using HeadStart.Client.Services.Users
@inject IStringLocalizer<UserInfoCard> L

<div id="user-info-card" class="pa-4">
    <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="2">

        <MudAvatar Style="width: 32px; height: 32px;">
                @if (string.IsNullOrWhiteSpace(_userState.Nom))
                {
                    <MudImage Src="img/avatar.png"></MudImage>
                }
                else
                {
                    @_userState.Prenom[0] @_userState.Nom[0]
                }
        </MudAvatar>

        <MudStack Justify="Justify.SpaceBetween" Spacing="0" Style="flex: 1; min-width: 0;">
            <MudText Typo="Typo.body2" Style="font-weight: 500; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;">
                @(L["Bonjour {0}", _userState.Prenom])
            </MudText>
            <MudText Typo="Typo.caption" Class="mud-secondary-text" Style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap;">
                @(_userState.Droits.Any() ? _userState.Droits[0].RoleCode : "")
            </MudText>
        </MudStack>

        <MudMenu AnchorOrigin="Origin.TopRight" TransformOrigin="Origin.BottomRight" LockScroll="true">
            <ActivatorContent>
                <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Size="Size.Small" />
            </ActivatorContent>
            <ChildContent>
                <div style="min-width: 200px;">
                        <div class="mx-4 mt-2 mb-3">
                        <MudText Typo="Typo.body2" Class="mud-secondary-text" Style="font-weight: 500;overflow: hidden; text-overflow: ellipsis; white-space: nowrap;">
                            @_userState.Email
                        </MudText>
                    </div>
                    <MudDivider Class="my-2" />
                    <MudMenuItem Href="/user/profile">
                        <div class="d-flex align-center">
                            <MudIcon Class="mx-2" Icon="@Icons.Material.Filled.Person" />
                            <MudText>@L["Profil"]</MudText>
                        </div>
                    </MudMenuItem>
                    <MudMenuItem OnClick="OnSettingClick">
                        <div class="d-flex align-center">
                            <MudIcon Class="mx-2" Icon="@Icons.Material.Filled.Settings" />
                            <MudText>@L["Paramètres"]</MudText>
                        </div>
                    </MudMenuItem>
                    <MudDivider Class="my-2" />
                    <div class="mx-4 mb-2">
                        <form method="post" action="/api/account/logout">
                            <AntiForgeryTokenInput />
                            <button aria-label="Logout"
                                    type="submit">
                                @L["Se déconnecter"]
                            </button>
                        </form>
                    </div>
                </div>
            </ChildContent>
        </MudMenu>
    </MudStack>
</div>

@code
{
    [CascadingParameter] public UserStateContainer UserState { get; set; } = null!;
    private UserState _userState => UserState.CurrentState;
    [Parameter] public EventCallback<MouseEventArgs> OnSettingClick { get; set; }
}
